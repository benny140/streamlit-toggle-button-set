{"ast":null,"code":"import { StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\n// const [formats, setFormats] = React.useState(() => [\"Hello\"])\n// const handleFormat = (\n//   event: React.MouseEvent<HTMLElement>,\n//   newFormats: string[]\n// ) => {\n//   setFormats(newFormats)\n// }\n\nclass ToggleButtonSet extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    // const items = args.button_list\n    this.render = () => {\n      return \"hello\";\n      // return (\n      //   <ToggleButtonGroup\n      //     color=\"primary\"\n      //     value={formats}\n      //     onChange={handleFormat}\n      //     size=\"medium\"\n      //     // exclusive\n      //     // fullWidth\n      //   >\n      //     {/* {items.map((item: string, index: number) => (\n      //     <ToggleButton key={index} value={item}>\n      //       {item}\n      //     </ToggleButton>\n      //   ))} */}\n      //     <ToggleButton value=\"Hello\">hello</ToggleButton>\n      //     <ToggleButton value=\"World\">world</ToggleButton>\n      //     <ToggleButton value=\"!\">❗</ToggleButton>\n      //   </ToggleButtonGroup>\n      // )\n    };\n  }\n}\nexport default _c = withStreamlitConnection(ToggleButtonSet);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["StreamlitComponentBase","withStreamlitConnection","ToggleButtonSet","constructor","args","render","_c","$RefreshReg$"],"sources":["C:/Users/bguo2/Python/my_first_component/toggle_button/frontend/src/ToggleButtonSet.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  ComponentProps,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport ToggleButton from \"@mui/material/ToggleButton\"\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\"\n\n// const [formats, setFormats] = React.useState(() => [\"Hello\"])\n// const handleFormat = (\n//   event: React.MouseEvent<HTMLElement>,\n//   newFormats: string[]\n// ) => {\n//   setFormats(newFormats)\n// }\n\nclass ToggleButtonSet extends StreamlitComponentBase {\n  // const items = args.button_list\n\n  public render = (): ReactNode => {\n    return \"hello\"\n    // return (\n    //   <ToggleButtonGroup\n    //     color=\"primary\"\n    //     value={formats}\n    //     onChange={handleFormat}\n    //     size=\"medium\"\n    //     // exclusive\n    //     // fullWidth\n    //   >\n    //     {/* {items.map((item: string, index: number) => (\n    //     <ToggleButton key={index} value={item}>\n    //       {item}\n    //     </ToggleButton>\n    //   ))} */}\n    //     <ToggleButton value=\"Hello\">hello</ToggleButton>\n    //     <ToggleButton value=\"World\">world</ToggleButton>\n    //     <ToggleButton value=\"!\">❗</ToggleButton>\n    //   </ToggleButtonGroup>\n    // )\n  }\n}\n\nexport default withStreamlitConnection(ToggleButtonSet)\n"],"mappings":"AAAA,SAEEA,sBAAsB,EACtBC,uBAAuB,QAElB,yBAAyB;AAKhC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,SAASF,sBAAsB,CAAC;EAAAG,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IACnD;IAAA,KAEOC,MAAM,GAAG,MAAiB;MAC/B,OAAO,OAAO;MACd;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC;EAAA;AACH;AAEA,eAAAC,EAAA,GAAeL,uBAAuB,CAACC,eAAe,CAAC;AAAA,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}