{"ast":null,"code":"import{Streamlit,withStreamlitConnection}from\"streamlit-component-lib\";import React,{useEffect}from\"react\";import ToggleButton from\"@mui/material/ToggleButton\";import ToggleButtonGroup from\"@mui/material/ToggleButtonGroup\";import{jsx as _jsx}from\"react/jsx-runtime\";const ToggleButtonSet=_ref=>{let{args}=_ref;useEffect(()=>Streamlit.setFrameHeight());const items=args.button_list;const[formats,setFormats]=React.useState(()=>args.default);const handleFormat=(event,newFormats)=>{setFormats(newFormats);Streamlit.setComponentValue(newFormats);};return/*#__PURE__*/_jsx(ToggleButtonGroup,{color:args.color,value:formats,onChange:handleFormat,size:args.size,exclusive:args.exclusive,fullWidth:args.fullWidth,children:items.map((item,index)=>/*#__PURE__*/_jsx(ToggleButton,{value:item,children:item},index))});};export default withStreamlitConnection(ToggleButtonSet);","map":{"version":3,"names":["Streamlit","withStreamlitConnection","React","useEffect","ToggleButton","ToggleButtonGroup","jsx","_jsx","ToggleButtonSet","_ref","args","setFrameHeight","items","button_list","formats","setFormats","useState","default","handleFormat","event","newFormats","setComponentValue","color","value","onChange","size","exclusive","fullWidth","children","map","item","index"],"sources":["C:/Users/bguo2/Python/my_first_component/toggle_button/frontend/src/ToggleButtonSet.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  ComponentProps,\n} from \"streamlit-component-lib\"\nimport React, { useEffect } from \"react\"\nimport ToggleButton from \"@mui/material/ToggleButton\"\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\"\n\nconst ToggleButtonSet = ({ args }: ComponentProps) => {\n  useEffect(() => Streamlit.setFrameHeight())\n  const items = args.button_list\n  const [formats, setFormats] = React.useState(() => args.default)\n  const handleFormat = (\n    event: React.MouseEvent<HTMLElement>,\n    newFormats: string[]\n  ) => {\n    setFormats(newFormats)\n    Streamlit.setComponentValue(newFormats)\n  }\n\n  return (\n    <ToggleButtonGroup\n      color={args.color}\n      value={formats}\n      onChange={handleFormat}\n      size={args.size}\n      exclusive={args.exclusive}\n      fullWidth={args.fullWidth}\n    >\n      {items.map((item: string, index: number) => (\n        <ToggleButton key={index} value={item}>\n          {item}\n        </ToggleButton>\n      ))}\n    </ToggleButtonGroup>\n  )\n}\n\nexport default withStreamlitConnection(ToggleButtonSet)\n"],"mappings":"AAAA,OACEA,SAAS,CAETC,uBAAuB,KAElB,yBAAyB,CAChC,MAAO,CAAAC,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,CAAAC,YAAY,KAAM,4BAA4B,CACrD,MAAO,CAAAC,iBAAiB,KAAM,iCAAiC,QAAAC,GAAA,IAAAC,IAAA,yBAE/D,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAA8B,IAA7B,CAAEC,IAAqB,CAAC,CAAAD,IAAA,CAC/CN,SAAS,CAAC,IAAMH,SAAS,CAACW,cAAc,CAAC,CAAC,CAAC,CAC3C,KAAM,CAAAC,KAAK,CAAGF,IAAI,CAACG,WAAW,CAC9B,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGb,KAAK,CAACc,QAAQ,CAAC,IAAMN,IAAI,CAACO,OAAO,CAAC,CAChE,KAAM,CAAAC,YAAY,CAAGA,CACnBC,KAAoC,CACpCC,UAAoB,GACjB,CACHL,UAAU,CAACK,UAAU,CAAC,CACtBpB,SAAS,CAACqB,iBAAiB,CAACD,UAAU,CAAC,CACzC,CAAC,CAED,mBACEb,IAAA,CAACF,iBAAiB,EAChBiB,KAAK,CAAEZ,IAAI,CAACY,KAAM,CAClBC,KAAK,CAAET,OAAQ,CACfU,QAAQ,CAAEN,YAAa,CACvBO,IAAI,CAAEf,IAAI,CAACe,IAAK,CAChBC,SAAS,CAAEhB,IAAI,CAACgB,SAAU,CAC1BC,SAAS,CAAEjB,IAAI,CAACiB,SAAU,CAAAC,QAAA,CAEzBhB,KAAK,CAACiB,GAAG,CAAC,CAACC,IAAY,CAAEC,KAAa,gBACrCxB,IAAA,CAACH,YAAY,EAAamB,KAAK,CAAEO,IAAK,CAAAF,QAAA,CACnCE,IAAI,EADYC,KAEL,CACf,CAAC,CACe,CAAC,CAExB,CAAC,CAED,cAAe,CAAA9B,uBAAuB,CAACO,eAAe,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}