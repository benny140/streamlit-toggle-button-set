{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bguo2\\\\Python\\\\my_first_component\\\\toggle_button\\\\frontend\\\\src\\\\ToggleButtonSet.tsx\",\n  _s = $RefreshSig$();\nimport { withStreamlitConnection } from \"streamlit-component-lib\";\nimport * as React from \"react\";\n// import FormatBoldIcon from '@mui/icons-material/FormatBold';\n// import FormatItalicIcon from '@mui/icons-material/FormatItalic';\n// import FormatUnderlinedIcon from '@mui/icons-material/FormatUnderlined';\n// import FormatColorFillIcon from '@mui/icons-material/FormatColorFill';\n// import ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToggleButtonSet() {\n  _s();\n  const [formats, setFormats] = React.useState(() => [\"bold\", \"italic\"]);\n  const handleFormat = (event, newFormats) => {\n    setFormats(newFormats);\n  };\n  return /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n    value: formats,\n    onChange: handleFormat,\n    \"aria-label\": \"text formatting\",\n    children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n      value: \"Hello\",\n      \"aria-label\": \"bold\",\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      value: \"World\",\n      \"aria-label\": \"italic\",\n      children: \"world\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      value: \"!\",\n      \"aria-label\": \"underlined\",\n      children: \"\\u2757\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(ToggleButtonSet, \"03X/dQNN2NAxmjfVL5oW4piYj8I=\");\n_c = ToggleButtonSet;\nexport default _c2 = withStreamlitConnection(ToggleButtonSet);\nvar _c, _c2;\n$RefreshReg$(_c, \"ToggleButtonSet\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["withStreamlitConnection","React","ToggleButton","ToggleButtonGroup","jsxDEV","_jsxDEV","ToggleButtonSet","_s","formats","setFormats","useState","handleFormat","event","newFormats","value","onChange","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["C:/Users/bguo2/Python/my_first_component/toggle_button/frontend/src/ToggleButtonSet.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\n\nimport * as React from \"react\"\n// import FormatBoldIcon from '@mui/icons-material/FormatBold';\n// import FormatItalicIcon from '@mui/icons-material/FormatItalic';\n// import FormatUnderlinedIcon from '@mui/icons-material/FormatUnderlined';\n// import FormatColorFillIcon from '@mui/icons-material/FormatColorFill';\n// import ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ToggleButton from \"@mui/material/ToggleButton\"\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\"\n\nfunction ToggleButtonSet() {\n  const [formats, setFormats] = React.useState(() => [\"bold\", \"italic\"])\n\n  const handleFormat = (\n    event: React.MouseEvent<HTMLElement>,\n    newFormats: string[]\n  ) => {\n    setFormats(newFormats)\n  }\n\n  return (\n    <ToggleButtonGroup\n      value={formats}\n      onChange={handleFormat}\n      aria-label=\"text formatting\"\n    >\n      <ToggleButton value=\"Hello\" aria-label=\"bold\">\n        hello\n      </ToggleButton>\n      <ToggleButton value=\"World\" aria-label=\"italic\">\n        world\n      </ToggleButton>\n      <ToggleButton value=\"!\" aria-label=\"underlined\">\n        ‚ùó\n      </ToggleButton>\n    </ToggleButtonGroup>\n  )\n}\n\nexport default withStreamlitConnection(ToggleButtonSet)\n"],"mappings":";;AAAA,SAGEA,uBAAuB,QAClB,yBAAyB;AAEhC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,iBAAiB,MAAM,iCAAiC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/D,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;EAEtE,MAAMC,YAAY,GAAGA,CACnBC,KAAoC,EACpCC,UAAoB,KACjB;IACHJ,UAAU,CAACI,UAAU,CAAC;EACxB,CAAC;EAED,oBACER,OAAA,CAACF,iBAAiB;IAChBW,KAAK,EAAEN,OAAQ;IACfO,QAAQ,EAAEJ,YAAa;IACvB,cAAW,iBAAiB;IAAAK,QAAA,gBAE5BX,OAAA,CAACH,YAAY;MAACY,KAAK,EAAC,OAAO;MAAC,cAAW,MAAM;MAAAE,QAAA,EAAC;IAE9C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eACff,OAAA,CAACH,YAAY;MAACY,KAAK,EAAC,OAAO;MAAC,cAAW,QAAQ;MAAAE,QAAA,EAAC;IAEhD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC,eACff,OAAA,CAACH,YAAY;MAACY,KAAK,EAAC,GAAG;MAAC,cAAW,YAAY;MAAAE,QAAA,EAAC;IAEhD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAExB;AAACb,EAAA,CA3BQD,eAAe;AAAAe,EAAA,GAAff,eAAe;AA6BxB,eAAAgB,GAAA,GAAetB,uBAAuB,CAACM,eAAe,CAAC;AAAA,IAAAe,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}