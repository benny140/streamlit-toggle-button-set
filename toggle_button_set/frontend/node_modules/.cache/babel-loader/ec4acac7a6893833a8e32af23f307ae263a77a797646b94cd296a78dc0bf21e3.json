{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bguo2\\\\Python\\\\my_first_component\\\\toggle_button\\\\frontend\\\\src\\\\ToggleButtonSet.tsx\";\nimport { StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React from \"react\";\n\n// import FormatBoldIcon from '@mui/icons-material/FormatBold';\n// import FormatItalicIcon from '@mui/icons-material/FormatItalic';\n// import FormatUnderlinedIcon from '@mui/icons-material/FormatUnderlined';\n// import FormatColorFillIcon from '@mui/icons-material/FormatColorFill';\n// import ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [formats, setFormats] = React.useState(() => [\"bold\", \"italic\"]);\n\n// const handleFormat = (event, newFormats) => {\n//   setFormats(newFormats)\n// }\n\nconst handleFormat = (event, newFormats) => {\n  setFormats(newFormats);\n};\nclass ToggleButtonSet extends StreamlitComponentBase {\n  constructor(...args) {\n    super(...args);\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n        value: formats,\n        onChange: handleFormat,\n        \"aria-label\": \"text formatting\",\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"bold\",\n          \"aria-label\": \"bold\",\n          children: \"\\\"Hello\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"italic\",\n          \"aria-label\": \"italic\",\n          children: \"\\\"Hello\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"underlined\",\n          \"aria-label\": \"underlined\",\n          children: \"\\\"Hello\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this);\n    };\n  }\n}\nexport default _c = withStreamlitConnection(ToggleButtonSet);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["StreamlitComponentBase","withStreamlitConnection","React","ToggleButton","ToggleButtonGroup","jsxDEV","_jsxDEV","formats","setFormats","useState","handleFormat","event","newFormats","ToggleButtonSet","constructor","args","render","value","onChange","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bguo2/Python/my_first_component/toggle_button/frontend/src/ToggleButtonSet.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\n\n// import FormatBoldIcon from '@mui/icons-material/FormatBold';\n// import FormatItalicIcon from '@mui/icons-material/FormatItalic';\n// import FormatUnderlinedIcon from '@mui/icons-material/FormatUnderlined';\n// import FormatColorFillIcon from '@mui/icons-material/FormatColorFill';\n// import ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ToggleButton from \"@mui/material/ToggleButton\"\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\"\n\nconst [formats, setFormats] = React.useState(() => [\"bold\", \"italic\"])\n\n// const handleFormat = (event, newFormats) => {\n//   setFormats(newFormats)\n// }\n\nconst handleFormat = (\n  event: React.MouseEvent<HTMLElement>,\n  newFormats: string[]\n) => {\n  setFormats(newFormats)\n}\n\nclass ToggleButtonSet extends StreamlitComponentBase {\n  public render = (): ReactNode => {\n    return (\n      <ToggleButtonGroup\n        value={formats}\n        onChange={handleFormat}\n        aria-label=\"text formatting\"\n      >\n        <ToggleButton value=\"bold\" aria-label=\"bold\">\n          \"Hello\"\n        </ToggleButton>\n        <ToggleButton value=\"italic\" aria-label=\"italic\">\n          \"Hello\"\n        </ToggleButton>\n        <ToggleButton value=\"underlined\" aria-label=\"underlined\">\n          \"Hello\"\n        </ToggleButton>\n      </ToggleButtonGroup>\n    )\n  }\n}\n\nexport default withStreamlitConnection(ToggleButtonSet)\n"],"mappings":";AAAA,SAEEA,sBAAsB,EACtBC,uBAAuB,QAClB,yBAAyB;AAChC,OAAOC,KAAK,MAAqB,OAAO;;AAExC;AACA;AACA;AACA;AACA;AACA,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,iBAAiB,MAAM,iCAAiC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;;AAEtE;AACA;AACA;;AAEA,MAAMC,YAAY,GAAGA,CACnBC,KAAoC,EACpCC,UAAoB,KACjB;EACHJ,UAAU,CAACI,UAAU,CAAC;AACxB,CAAC;AAED,MAAMC,eAAe,SAASb,sBAAsB,CAAC;EAAAc,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC5CC,MAAM,GAAG,MAAiB;MAC/B,oBACEV,OAAA,CAACF,iBAAiB;QAChBa,KAAK,EAAEV,OAAQ;QACfW,QAAQ,EAAER,YAAa;QACvB,cAAW,iBAAiB;QAAAS,QAAA,gBAE5Bb,OAAA,CAACH,YAAY;UAACc,KAAK,EAAC,MAAM;UAAC,cAAW,MAAM;UAAAE,QAAA,EAAC;QAE7C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC,eACfjB,OAAA,CAACH,YAAY;UAACc,KAAK,EAAC,QAAQ;UAAC,cAAW,QAAQ;UAAAE,QAAA,EAAC;QAEjD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC,eACfjB,OAAA,CAACH,YAAY;UAACc,KAAK,EAAC,YAAY;UAAC,cAAW,YAAY;UAAAE,QAAA,EAAC;QAEzD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAExB,CAAC;EAAA;AACH;AAEA,eAAAC,EAAA,GAAevB,uBAAuB,CAACY,eAAe,CAAC;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}