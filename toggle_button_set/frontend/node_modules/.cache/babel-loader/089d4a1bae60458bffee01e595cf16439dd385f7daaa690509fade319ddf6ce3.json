{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bguo2\\\\Python\\\\my_first_component\\\\toggle_button\\\\frontend\\\\src\\\\ToggleButtonSet.tsx\";\nimport { StreamlitComponentBase, withStreamlitConnection } from \"streamlit-component-lib\";\nimport * as React from \"react\";\n// import FormatBoldIcon from '@mui/icons-material/FormatBold';\n// import FormatItalicIcon from '@mui/icons-material/FormatItalic';\n// import FormatUnderlinedIcon from '@mui/icons-material/FormatUnderlined';\n// import FormatColorFillIcon from '@mui/icons-material/FormatColorFill';\n// import ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ToggleButtonSet extends StreamlitComponentBase {\n  constructor(...args) {\n    var _s = $RefreshSig$();\n    super(...args);\n    this.render = _s(() => {\n      _s();\n      const [formats, setFormats] = React.useState(() => [\"bold\", \"italic\"]);\n      const handleFormat = (event, newFormats) => {\n        setFormats(newFormats);\n      };\n      return /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n        color: \"primary\",\n        value: formats,\n        onChange: handleFormat,\n        \"aria-label\": \"text formatting\",\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"Hello\",\n          \"aria-label\": \"bold\",\n          children: \"hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"World\",\n          \"aria-label\": \"italic\",\n          children: \"world\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          value: \"!\",\n          \"aria-label\": \"underlined\",\n          children: \"\\u2757\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this);\n    }, \"03X/dQNN2NAxmjfVL5oW4piYj8I=\");\n  }\n}\nexport default _c = withStreamlitConnection(ToggleButtonSet);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["StreamlitComponentBase","withStreamlitConnection","React","ToggleButton","ToggleButtonGroup","jsxDEV","_jsxDEV","ToggleButtonSet","constructor","args","_s","$RefreshSig$","render","formats","setFormats","useState","handleFormat","event","newFormats","color","value","onChange","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bguo2/Python/my_first_component/toggle_button/frontend/src/ToggleButtonSet.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport { ReactNode } from \"react\"\nimport * as React from \"react\"\n// import FormatBoldIcon from '@mui/icons-material/FormatBold';\n// import FormatItalicIcon from '@mui/icons-material/FormatItalic';\n// import FormatUnderlinedIcon from '@mui/icons-material/FormatUnderlined';\n// import FormatColorFillIcon from '@mui/icons-material/FormatColorFill';\n// import ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ToggleButton from \"@mui/material/ToggleButton\"\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\"\n\nclass ToggleButtonSet extends StreamlitComponentBase {\n  public render = (): ReactNode => {\n    const [formats, setFormats] = React.useState(() => [\"bold\", \"italic\"])\n\n    const handleFormat = (\n      event: React.MouseEvent<HTMLElement>,\n      newFormats: string[]\n    ) => {\n      setFormats(newFormats)\n    }\n\n    return (\n      <ToggleButtonGroup\n        color=\"primary\"\n        value={formats}\n        onChange={handleFormat}\n        aria-label=\"text formatting\"\n      >\n        <ToggleButton value=\"Hello\" aria-label=\"bold\">\n          hello\n        </ToggleButton>\n        <ToggleButton value=\"World\" aria-label=\"italic\">\n          world\n        </ToggleButton>\n        <ToggleButton value=\"!\" aria-label=\"underlined\">\n          ‚ùó\n        </ToggleButton>\n      </ToggleButtonGroup>\n    )\n  }\n}\n\nexport default withStreamlitConnection(ToggleButtonSet)\n"],"mappings":";AAAA,SAEEA,sBAAsB,EACtBC,uBAAuB,QAClB,yBAAyB;AAEhC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,iBAAiB,MAAM,iCAAiC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,eAAe,SAASP,sBAAsB,CAAC;EAAAQ,YAAA,GAAAC,IAAA;IAAA,IAAAC,EAAA,GAAAC,YAAA;IAAA,SAAAF,IAAA;IAAA,KAC5CG,MAAM,GAAAF,EAAA,CAAG,MAAiB;MAAAA,EAAA;MAC/B,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;MAEtE,MAAMC,YAAY,GAAGA,CACnBC,KAAoC,EACpCC,UAAoB,KACjB;QACHJ,UAAU,CAACI,UAAU,CAAC;MACxB,CAAC;MAED,oBACEZ,OAAA,CAACF,iBAAiB;QAChBe,KAAK,EAAC,SAAS;QACfC,KAAK,EAAEP,OAAQ;QACfQ,QAAQ,EAAEL,YAAa;QACvB,cAAW,iBAAiB;QAAAM,QAAA,gBAE5BhB,OAAA,CAACH,YAAY;UAACiB,KAAK,EAAC,OAAO;UAAC,cAAW,MAAM;UAAAE,QAAA,EAAC;QAE9C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC,eACfpB,OAAA,CAACH,YAAY;UAACiB,KAAK,EAAC,OAAO;UAAC,cAAW,QAAQ;UAAAE,QAAA,EAAC;QAEhD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC,eACfpB,OAAA,CAACH,YAAY;UAACiB,KAAK,EAAC,GAAG;UAAC,cAAW,YAAY;UAAAE,QAAA,EAAC;QAEhD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAExB,CAAC;EAAA;AACH;AAEA,eAAAC,EAAA,GAAe1B,uBAAuB,CAACM,eAAe,CAAC;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}